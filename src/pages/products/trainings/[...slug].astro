---
import { type CollectionEntry, getCollection } from 'astro:content'
import BaseLayout from '@layouts/BaseLayout.astro'
import Header from '@components/products/Header.astro'
import Section from '@components/page/Section.astro'
import Description from '@components/products/Description.astro'
import ContactButton from '@components/contact/ContactButton.astro'
import TargetGroup from '@components/products/TargetGroup.astro'
import Breadcrumbs from '@components/nav/Breadcrumb.astro'

export const getStaticPaths = async function () {
  const trainings = await getCollection('trainings')
  return trainings.map((training) => ({
    params: { slug: training.slug },
    props: { training },
  }))
}

type Props = {
  training: CollectionEntry<'trainings'>
}

const category = 'Training'
const { training }: Props = Astro.props
const { title, description, headline, summary, targets } = training.data
const { Content } = await training.render()

const openGraph = {
  title: headline ?? title,
  description: summary ?? description,
}
---

<BaseLayout {title} {description} {openGraph}>
  <Header headline={headline ?? title} {summary} {category}>
  </Header>
  {targets.length > 0 &&
    <Section title="Zielgruppe">
      <TargetGroup {targets} />
    </Section>
  }
    <Description>
        <Content />
    </Description>
    <Section title="Ãœberzeugt?">
        <ContactButton />
    </Section>
  <Breadcrumbs slot="breadcrumbs" separator="succeeds" items={[{ href: '/products/trainings/', text: 'Trainings', emoji: 'ðŸŽ“' }, { href: Astro.url.pathname, text: title }]} />
</BaseLayout>
