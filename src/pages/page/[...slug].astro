---
import { type GetStaticPaths } from 'astro'
import { type CollectionEntry, getCollection, getEntry } from 'astro:content'
import BaseLayout from '@layouts/BaseLayout.astro'
import Header from '../../components/page/Header.astro'
import ReadingTime from '../../components/controls/ReadingTime.astro'
import FormattedDate from '../../components/controls/FormattedDate.astro'
import { frontmatterSchema } from '../../entities/frontmatter'

type Props = CollectionEntry<'pages'>

export const getStaticPaths: GetStaticPaths = async function () {
  const pages = await getCollection('pages')
  return pages.map((page) => ({
    params: { slug: page.slug },
    props: page,
  }))
}

const page: Props = Astro.props
const { title } = page.data
const locale = await getEntry(page.data.lang)
const { Content, remarkPluginFrontmatter } = await page.render()
const fm = frontmatterSchema.parse(remarkPluginFrontmatter)
const { minutesRead, lastModified } = fm
---

<BaseLayout {title} {locale}>
  <article>
    <Header {title}>
      {
        minutesRead && (
          <p>
            Lesedauer:
            <ReadingTime minutes={minutesRead} />
          </p>
        )
      }
    </Header>
    <div class="content"><Content /></div>
    <footer class="box">
      {
        lastModified && (
          <p>
            Aktualisiert: <FormattedDate date={lastModified} locale={locale.data.lang} />
          </p>
        )
      }
    </footer>
  </article>
</BaseLayout>
