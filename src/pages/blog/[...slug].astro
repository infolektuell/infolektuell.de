---
import { type CollectionEntry, getCollection } from 'astro:content'
import { frontmatterSchema } from '@entities/frontmatter'
import BaseLayout from '@layouts/BaseLayout.astro'
import TagList from '@components/blog/TagList.astro'
import Header from '@components/page/Header.astro'
import ReadingTime from '@components/blog/ReadingTime.astro'
import Section from '@components/page/Section.astro'
import FormattedDate from '@components/blog/FormattedDate.astro'
import Breadcrumbs from '@components/nav/Breadcrumb.astro'

export async function getStaticPaths () {
  const posts = await getCollection('posts')
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }))
}

type Props = {
  post: CollectionEntry<'posts'>
}

const { post }: Props = Astro.props
const { title, description, headline, summary, tags, publishedTime } = post.data
const { Content, remarkPluginFrontmatter } = await post.render()
const fm = frontmatterSchema.parse(remarkPluginFrontmatter)
const { minutesRead, lastModified } = fm
const openGraph = {
  title: headline ?? title,
  description: summary ?? description,
  type: 'article',
}
---

<BaseLayout {title} {description} {openGraph}>
  <article>
    <Header {title} {headline} {summary}>
      <p class="content is-small">
        Ver√∂ffentlicht: <FormattedDate date={publishedTime} /><br />
        Lesezeit: <ReadingTime minutes={minutesRead} />
      </p>
    </Header>
    <div class="box">
        <div class="content"><Content /></div>
    </div>
    {tags.length > 0 && (
            <Section title="Tags">
                <TagList {tags} />
            </Section>
    )}
      <footer class="content is-small">
        {
          lastModified && (
                        <p>
                            Aktualisiert: <FormattedDate date={lastModified} locale={Astro.currentLocale} />
                        </p>
          )
        }
      </footer>
  </article>
  <Breadcrumbs slot="breadcrumbs" separator="succeeds" items={[{ href: '/blog/', text: 'Blog', emoji: 'üìú' }, { href: Astro.url.pathname, text: title }]} />
</BaseLayout>
