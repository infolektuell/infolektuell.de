---
import { type CollectionEntry, getCollection } from 'astro:content'
import BaseLayout from '@layouts/BaseLayout.astro'
import Header from '@components/page/Header.astro'
import Section from '@components/page/Section.astro'
import PostPreview from '@components/blog/PostPreview.astro'
import ProductPreview from '@components/products/ProductPreview.astro'

export async function getStaticPaths () {
  const posts = await getCollection('posts')
  const products = await getCollection('products')
  const tags = [...new Set<string>([
    ...posts.flatMap(({ data }) => data.tags),
    ...products.flatMap(({ data }) => data.tags),
  ])]
  return tags.map((tag) => ({
    params: { tag },
    props: {
      posts: posts.filter(({ data }) => data.tags.includes(tag)),
      coachings: products.filter(({ data, id }) => id.startsWith('coachings/') && data.tags.includes(tag)),
      courses: products.filter(({ id, data }) => id.startsWith('courses/') && data.tags.includes(tag)),
      services: products.filter(({ id, data }) => id.startsWith('services/') && data.tags.includes(tag)),
      trainings: products.filter(({ id, data }) => id.startsWith('trainings/') && data.tags.includes(tag)),
    },
  }))
}

type Props = {
  posts: CollectionEntry<'posts'>[]
  coachings: CollectionEntry<'products'>[]
  courses: CollectionEntry<'products'>[]
  services: CollectionEntry<'products'>[]
  trainings: CollectionEntry<'products'>[]
}
const { tag } = Astro.params
const title = tag
const { posts, coachings, courses, services, trainings }: Props = Astro.props
const products = [
  {
    title: 'Coachings',
    products: coachings,
  },
  {
    title: 'Kurse',
    products: courses,
  },
  {
    title: 'Dienstleistungen',
    products: services,
  },
  {
    title: 'Trainings',
    products: trainings,
  },
].filter(({ products }) => products.length > 0)
---

<BaseLayout {title} noindex={true}>
  <Header {title} />
  {posts.length > 0 && (
          <Section title="BeitrÃ¤ge">
            {posts.map((post) => <PostPreview {post} />)}
          </Section>
  )
  }
  {
    products.map(({ title, products }) => (
      <Section title={`${title} (${products.length})`}>
        {products.map((product) => (
          <ProductPreview {product} />
        ))}
      </Section>
    ))
  }
</BaseLayout>
