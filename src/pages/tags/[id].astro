---
import { type GetStaticPaths } from 'astro'
import { type CollectionEntry, getCollection } from 'astro:content'
import BaseLayout from '@layouts/BaseLayout.astro'
import Header from '@components/page/Header.astro'
import Section from '@components/page/Section.astro'
import ProductPreview from '@components/products/ProductPreview.astro'

export const getStaticPaths: GetStaticPaths = async () => {
  const tags = await getCollection('tags')
  return tags.map((tag) => ({
    params: { id: tag.id },
    props: { tag },
  }))
}

type Props = {
  tag: CollectionEntry<'tags'>
}
const { tag }: Props = Astro.props
const { label } = tag.data
const coachings = await getCollection('coachings', ({ data }) => data.tags.some((t) => t.id === tag.id))
const courses = await getCollection('courses', ({ data }) => data.tags.some((t) => t.id === tag.id))
const services = await getCollection('services', ({ data }) => data.tags.some((t) => t.id === tag.id))
const trainings = await getCollection('trainings', ({ data }) => data.tags.some((t) => t.id === tag.id))
const products = [
  {
    title: 'Coachings',
    href: '/products/coachings/',
    products: coachings,
  },
  {
    title: 'Kurse',
    href: '/products/courses/',
    products: courses,
  },
  {
    title: 'Dienstleistungen',
    href: '/products/services/',
    products: services,
  },
  {
    title: 'Trainings',
    href: '/products/trainings/',
    products: trainings,
  },
].filter(({ products }) => products.length > 0)
---

<BaseLayout title={label} noindex={true}>
  <Header title={label} />
  {
    products.map(({ title, href, products }) => (
      <Section title={`${title} (${products.length})`}>
        {products.map((product) => (
          <ProductPreview {product} href={href + product.slug} />
        ))}
      </Section>
    ))
  }
</BaseLayout>
