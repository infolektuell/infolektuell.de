---
import Icon from './Icon.astro'
import Emoji from './Emoji.astro'
import NavLink from '../nav/NavLink.astro'
type FooterLink = {
  text: string
  href: string
  icon?: string
}
type Props = {
  title: string
  href?: string
  icon?: string
  emoji?: string
  links?: FooterLink[]
}
const { title, href, icon, emoji, links }: Props = Astro.props
const TitleTag = href ? 'a' : 'p'
const hasImage = Astro.slots.has('image')
const hasFooter = Astro.slots.has('footer')
---

<article class="card">
  <header class="card-header">
    <TitleTag class="card-header-title" {href}>{title}</TitleTag>
    <slot name="icon">
      {
        (icon || emoji) && (
          <div class="card-header-icon">
            {icon && <Icon name={icon} aria-hidden="true" />}
            {emoji && !icon && <Emoji char={emoji} aria-hidden="true" />}
          </div>
        )
      }
    </slot>
  </header>
  {
    hasImage && (
      <div class="card-image">
        <slot name="image" />
      </div>
    )
  }
  <div class="card-content"><slot /></div>
  {
    (hasFooter || links) && (
      <footer class="card-footer">
        <slot name="footer">
          {links?.map((link) => (
            <NavLink class="card-footer-item is-primary" {...link} />
          ))}
        </slot>
      </footer>
    )
  }
</article>
<style>
  .card-footer {
    flex-wrap: wrap;
  }
</style>
