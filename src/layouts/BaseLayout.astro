---
import '@assets/styles/bulma.scss'
import { type ImageMetadata } from 'astro'
import { type CollectionEntry, getEntry } from 'astro:content'
import { getImage } from 'astro:assets'
import { SEO } from 'astro-seo'
import Header from '../components/site/SiteHeader.astro'
import Footer from '../components/site/SiteFooter.astro'
import siteConfig from '@config/site'
import defaultSocialImage from '@assets/images/placeholder-social.jpg'
import BackgroundImage from '@assets/images/background/background.jpg'
const backgroundURL = `url(${BackgroundImage.src})`

type Props = {
  locale?: CollectionEntry<'locales'>
  title?: string
  description?: string
  noindex?: boolean
  nofollow?: boolean
  openGraph?: {
    type?: string
    title?: string
    image?: ImageMetadata
    description?: string
    author?: string[]
    publishedTime?: string
    modifiedTime?: string
    expirationTime?: string
  }
}

const { title, description, noindex = false, nofollow = false, openGraph: og }: Props = Astro.props
const defaultLocale = await getEntry('locales', 'de-DE')
const locale = Astro.props.locale ?? defaultLocale
const { lang, dir } = locale.data
const openGraphImage = await getImage({ src: og?.image ?? defaultSocialImage })

const { width, height } = openGraphImage.attributes
const imageData = { width, height, type: openGraphImage.options.format }
const openGraph = {
  basic: {
    type: og?.type ?? 'website',
    title: og?.title ?? siteConfig.openGraph.title,
    image: openGraphImage.src,
  },
  optional: {
    description: og?.description ?? siteConfig.openGraph.description,
    locale: locale.id,
    siteName: siteConfig.title,
  },
  image: imageData,
}

if (og && openGraph.basic.type === 'article') {
  const { modifiedTime, publishedTime, expirationTime, author } = og
  const article = { modifiedTime, publishedTime, expirationTime, author }
  Object.assign(openGraph, { article })
}

const seo = {
  title,
  titleTemplate: `%s | ${siteConfig.title}`,
  titleDefault: siteConfig.title,
  description: description ?? siteConfig.description,
  noindex,
  nofollow,
  charset: 'UTF-8',
  openGraph,
}
---

<!doctype html>
<html {lang} {dir}>
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <SEO {...seo} />
    <slot name="after-head" />
  </head>
  <body>
    <slot name="before-body" />
    <Header />
    <slot name="breadcrumbs" />
    <main class="section"><div class="container"><slot /></div></main>
    <Footer />
    <slot name="after-body" />
    <style define:vars={{ backgroundURL }}>
      main {
        background-image: var(--backgroundURL);
        background-repeat: no-repeat;
        background-size: 100%;
      }
    </style>
  </body>
</html>
